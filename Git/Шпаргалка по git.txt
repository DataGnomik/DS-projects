Вся информация, содержащаяся в этом файле была взята из курса по git:
	`https://practicum.yandex.ru/profile/git-basics/`

Итак, приступим с созданию Шпаргалки

Основные команды git (Работа с консолью)
	Навигация
		pwd               — показать рабочую папку;
		ls                — отобразить содержимое директории;
		ls -a             — показать также скрытые файлы и папки, названия которых начинаются с символа .;
		cd first-project  — перейти в папку first-project;

		cd .. — перейти на уровень выше, в родительскую папку;
		cd ~  — перейти в домашнюю директорию (/Users/Username);
		cd /  — перейти в корневую директорию.
	Работа с файлами и папками
		Создание
			touch index.html     — создать файл index.html в текущей папке;
			mkdir second-project — создать папку с именем second-project в текущей папке.
		Копирование и перемещение
			cp file.txt ~/my-dir — копировать файл в другое место;
			mv file.txt ~/my-dir — переместить файл или папку в другое место.
		Чтение
			cat file.txt         — распечатать содержимое текстового файла file.txt.
		Удаление
			rm about.html         — удалить файл about.html;
			rmdir images          — удалить папку images;
			rm -r second-project  — удалить папку second-project и всё, что она содержит.
	Полезные возможности
		Команды необязательно печатать и выполнять по очереди. Можно указать их списком — разделить двумя амперсандами (&&).
		Чтобы не вводить название файла или папки полностью, можно набрать первые символы имени и дважды нажать Tab. Если файл или папка есть в текущей директории, командная строка допишет путь сама.


Начало работы с Git
	Инициализация репозитория
		git init — инициализировать репозиторий.
	Синхронизация локального и удалённого репозиториев
		git remote add origin https://github.com/YandexPracticum/first-project.git — привязать локальный репозиторий к удалённому с URL https://github.com/YandexPracticum/first-project.git;
		git remote -v — проверить, что репозитории действительно связались;
		git push -u origin master — в первый раз загрузить все коммиты из локального репозитория в удалённый с названием origin.
		git push — загрузить коммиты в удалённый репозиторий после того, как он был привязан с помощью флага -u.
	Подготовка файла к коммиту
		git add todo.txt — добавить файл todo.txt к коммиту;
		git add --all — добавить к коммиту сразу все файлы, в которых были изменения, и все новые файлы;
		git add . — добавить к коммиту текущую папку и все файлы в ней.
	Создание и публикация коммита
		git commit -m "Комментарий к коммиту." — сделать коммит и оставить комментарий, чтобы было проще понять, какие изменения сделаны;
		git push — добавь изменения в удалённый репозиторий.
	Просмотр информации о коммитах
		git log — вывести подробную историю коммитов;
		git log --oneline — показать краткую информацию о коммитах: сокращённый хеш и сообщение.
	Просмотр состояния файлов
		git status — показать текущее состояние репозитория.
	Добавление изменений в последний коммит
		git commit --amend --no-edit — добавить изменения к последнему коммиту и оставь сообщение прежним;
		git commit --amend -m "Новое сообщение" — изменить сообщение к последнему коммиту на Новое сообщение.
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ~~~   Выйти из редактора Vim: нажать Esc, ввести :qa!, нажать Enter.     ~~~
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	«Откат» файлов и коммитов
		git restore --staged hello.txt — перевести файл hello.txt из состояния staged обратно в untracked или modified;
		git restore hello.txt — вернуть файл hello.txt к последней версии, которая была сохранена через git commit или git add;
		git reset --hard b576d89 — удалить все незакоммиченные изменения из staging и «рабочей зоны» вплоть до указанного коммита.
	Просмотр изменений
		git diff — показать изменения в «рабочей зоне», то есть в modified-файлах;
		git diff a9928ab 11bada1 — вывести разницу между двумя коммитами;
		git diff --staged — показать изменения, которые добавлены в staged-файлах.

Полезные ссылки для изучения git
	Markdown Cheat Sheet
		`https://www.markdownguide.org/cheat-sheet/`
	Соглашение о коммитах
		`https://www.conventionalcommits.org/ru/v1.0.0-beta.4/#%D1%81%D0%BF%D0%B5%D1%86%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F`